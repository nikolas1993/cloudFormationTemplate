AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Template CloudFormation - Exercices Nikolas

Parameters:
  HelloLambdaName:
    Description: HelloLambda's name
    Type: String
    Default: nik-hello-lambda
  HelloLambdaIamRoleName:
    Description: HelloLambdaIamRole's name
    Type: String
    Default: nikHelloLambdaIAMRole
  HelloStateMachineName:
    Description: HelloStateMachine's name
    Type: String
    Default: sfNikHelloStateMachine
  HelloStateMachineRoleName:
    Description: HelloStateMachineRole's name
    Type: String
    Default: nikHelloStateMachineIAMRole

Resources:
  HelloLambda: #lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref HelloLambdaName
      CodeUri: lambda
      Handler: nik-hello-function.entrypoint
      Runtime: python3.12
      MemorySize: 1280
      Timeout: 900
      Role: !GetAtt HelloLambdaIamRole.Arn

  HelloLambdaIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref HelloLambdaIamRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  HelloStateMachine: #state-machine
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Ref HelloStateMachineName
      Type: STANDARD
      DefinitionUri: state-machine.yaml
      Role: !GetAtt HelloStateMachineRole.Arn
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt HelloStateMachineLog.Arn
        Level: ALL
        IncludeExecutionData: True
      DefinitionSubstitutions:
        HelloLambdaArn: !GetAtt HelloLambda.Arn
        ApplicationName: !Ref HelloStateMachineName

  HelloStateMachineLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: !Sub /aws/vendedlogs/states/${HelloStateMachineName}-statemachine-logs

  HelloStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref HelloStateMachineRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: "lambda-and-logs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogDelivery'
                  - 'logs:GetLogDelivery'
                  - 'logs:UpdateLogDelivery'
                  - 'logs:DeleteLogDelivery'
                  - 'logs:ListLogDeliveries'
                  - 'logs:PutResourcePolicy'
                  - 'logs:DescribeResourcePolicies'
                  - 'logs:DescribeLogGroups'
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
              - Effect: Allow
                Action: "lambda:InvokeFunction"
                Resource: !GetAtt HelloLambda.Arn

Outputs:
  StackName:
    Description: Deployed StackName for update
    Value: !Ref AWS::StackName
  LambdaName:
    Description: Deployed LambdaName for update
    Value: !Ref HelloLambda
  StateMachineName:
    Description: Deployed LambdaName for update
    Value: !Ref HelloStateMachineName
